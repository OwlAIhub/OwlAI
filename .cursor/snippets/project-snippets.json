{
  "Project API Call": {
    "prefix": "api",
    "body": [
      "export const ${1:functionName} = async (${2:params}: ${3:ParamsType}): Promise<${4:ReturnType}> => {",
      "  try {",
      "    const response = await fetch(`${5:/api/endpoint}`, {",
      "      method: '${6:GET}',",
      "      headers: {",
      "        'Content-Type': 'application/json',",
      "        ...(token && { Authorization: `Bearer \\${token}` }),",
      "      },",
      "      ${7:body: JSON.stringify(params),}",
      "    });",
      "",
      "    if (!response.ok) {",
      "      throw new Error(`HTTP error! status: \\${response.status}`);",
      "    }",
      "",
      "    return await response.json();",
      "  } catch (error) {",
      "    console.error('API call failed:', error);",
      "    throw error;",
      "  }",
      "};"
    ],
    "description": "Project-specific API call pattern"
  },

  "Database Query": {
    "prefix": "dbquery",
    "body": [
      "export const ${1:queryName} = async (${2:params}: ${3:ParamsType}) => {",
      "  try {",
      "    const result = await prisma.${4:model}.${5:findMany}({",
      "      where: {",
      "        ${6:// Query conditions}",
      "      },",
      "      select: {",
      "        ${7:// Selected fields}",
      "      },",
      "      ${8:// Additional options}",
      "    });",
      "",
      "    return result;",
      "  } catch (error) {",
      "    console.error('Database query failed:', error);",
      "    throw new DatabaseError('Failed to ${1:queryName}');",
      "  }",
      "};"
    ],
    "description": "Project-specific database query pattern"
  }
}
